#!/bin/sh
set -e

export DISPLAY=:99
readonly DISPLAY
readonly MAX_LOG_FILES=5
readonly LOG_FILE="./logs/fps.log"
readonly RESOLUTIONS="1366x768 1920x1080 2560x1440 3840x2160 5120x2880"
readonly TIMEOUT=10

[ -x ./life ] # Exits if the life binary is not found

# Creat log directory if it doesn't exist
mkdir -p "$(dirname "$LOG_FILE")"

# Cycle log files
i=$MAX_LOG_FILES
while [ "$i" -gt 1 ]; do
	j=$((i - 1))
	if [ -f "$LOG_FILE.$j" ]; then
		mv "$LOG_FILE.$j" "$LOG_FILE.$i"
	fi
	i=$j
done

if [ -f "$LOG_FILE" ]; then
	mv "$LOG_FILE" "$LOG_FILE.1"
fi
echo "Benchmarking FPS..." >"$LOG_FILE"

for RES in $RESOLUTIONS; do
	FPS_TOTAL=0
	FPS_COUNT=0

	# Start Xvfb with the specified resolution
	echo "Testing resolution: $RES" | tee -a "$LOG_FILE"
	Xvfb "$DISPLAY" -screen 0 "${RES}x24" 2>/dev/null &
	XVFB_PID=$!
	sleep 1

	# Capture FPS data
	FPS_OUTPUT=$(timeout "$TIMEOUT" ./life 1 2>&1 | tee -a "$LOG_FILE" | grep "FPS:" | awk '{print $2}')
	for FPS in $FPS_OUTPUT; do
		FPS_TOTAL=$(awk -v t="$FPS_TOTAL" -v f="$FPS" 'BEGIN {print t+f}')
		FPS_COUNT=$((FPS_COUNT + 1))
	done

	kill "$XVFB_PID" 2>/dev/null || true # Kill Xvfb

	# Calculate and print the average FPS
	if [ "$FPS_COUNT" -gt 0 ]; then
		FPS_AVERAGE=$(awk -v t="$FPS_TOTAL" -v c="$FPS_COUNT" 'BEGIN {print t/c}')
	else
		FPS_AVERAGE=0
	fi
	echo "$RES: $FPS_AVERAGE FPS (average)" | tee -a "$LOG_FILE"

	wait "$XVFB_PID" 2>/dev/null || true
done

echo "Benchmark completed. Results saved to $LOG_FILE."
