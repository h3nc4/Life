#!/bin/sh
set -e

export DISPLAY=:99
readonly DISPLAY
readonly EXTRA_LOG_FILES=9
readonly LOG_FILE="./logs/run.json.log"
readonly LOG_RESULTS_FILE="./logs/results.json.log"
readonly RESOLUTIONS="1366x768 1920x1080 2560x1440 3840x2160 5120x2880"
readonly TIMEOUT=10

[ -x ./life ] # Exits if the life binary is not found

# Create log directory if it doesn't exist
mkdir -p "$(dirname "$LOG_FILE")"

# Cycle log files
i=$EXTRA_LOG_FILES
while [ "$i" -gt 1 ]; do
	j=$((i - 1))
	if [ -f "$LOG_FILE.$j.gz" ]; then
		mv "$LOG_FILE.$j.gz" "$LOG_FILE.$i.gz"
		mv "$LOG_RESULTS_FILE.$j.gz" "$LOG_RESULTS_FILE.$i.gz"
	fi
	i=$j
done

if [ -f "$LOG_FILE.gz" ]; then
	mv "$LOG_FILE.gz" "$LOG_FILE.1.gz"
	mv "$LOG_RESULTS_FILE.gz" "$LOG_RESULTS_FILE.1.gz"
fi

# Create a temporary file to store the current run's output and ensure it's cleaned up
CURRENT_RUN_FILE=$(mktemp)
trap 'rm -f "$CURRENT_RUN_FILE"' EXIT

echo "[" > "$LOG_RESULTS_FILE" # Start JSON array
for RES in $RESOLUTIONS; do
	# Start Xvfb with the specified resolution
	Xvfb "$DISPLAY" -screen 0 "${RES}x24" 2>/dev/null &
	XVFB_PID=$!
	sleep 1

	# Capture FPS, Draw time, and Update time data
	while read -r line; do
		case "$line" in
		*"FPS:"*)
			FPS="${FPS}$(echo "$line" | awk '{print $2}'), "
			;;
		*"Draw time:"*)
			DRAW_TIME="${DRAW_TIME}$(echo "$line" | awk '{print $3}'), "
			;;
		*"Update time:"*)
			UPDATE_TIME="${UPDATE_TIME}$(echo "$line" | awk '{print $3}'), "
			;;
		esac
	done <<EOF
"$(timeout "$TIMEOUT" ./life 1 2>&1 | tee -a "$LOG_FILE")"
EOF

	# Clean up
	kill "$XVFB_PID" 2>/dev/null || : # Kill Xvfb

	# Format data as JSON
	[ "$RES" != "${RESOLUTIONS##* }" ] && COMMA="," || COMMA=""
	tee -a "$LOG_RESULTS_FILE" >/dev/null <<EOF
	{
		"resolution": "$RES",
		"fps": [${FPS%??}],
		"draw_time": [${DRAW_TIME%??}],
		"update_time": [${UPDATE_TIME%??}]
	}$COMMA
EOF

	# Reset data
	FPS=""
	DRAW_TIME=""
	UPDATE_TIME=""
done

# Close JSON array
echo "]" >> "$LOG_RESULTS_FILE"

gzip "$LOG_FILE" "$LOG_RESULTS_FILE"
echo "Benchmark completed. Results saved to $LOG_RESULTS_FILE.gz"
