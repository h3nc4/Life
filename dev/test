#!/bin/bash
set -e

export DEBUG=1
export DISPLAY=:99
readonly DEBUG DISPLAY

readonly MAX_LOG_FILES=5
readonly LOG_FILE="./logs/fps.log"
readonly RESOLUTIONS="1366x768 1920x1080 2560x1440 3840x2160 5120x2880"
readonly TIMEOUT=10

[ -x ./life ] # Exits if the life binary is not found

# Creat log directory if it doesn't exist
mkdir -p "$(dirname "$LOG_FILE")"

# Cycle log files
for ((i=MAX_LOG_FILES; i>1; i--)); do
	[ -f "$LOG_FILE.$((i - 1))" ] && mv "$LOG_FILE.$((i - 1))" "$LOG_FILE.$i"
done
[ -f "$LOG_FILE" ] && mv "$LOG_FILE" "$LOG_FILE.1"
echo "Benchmarking FPS..." > "$LOG_FILE"

for RES in $RESOLUTIONS; do
	WIDTH=$(echo "$RES" | cut -d'x' -f1)
	HEIGHT=$(echo "$RES" | cut -d'x' -f2)
	FPS_TOTAL=0
	FPS_COUNT=0

	# Start Xvfb with the specified resolution
	echo "Testing resolution: $RES" | tee -a "$LOG_FILE"
	Xvfb "$DISPLAY" -screen 0 "${WIDTH}x${HEIGHT}x24" &
	XVFB_PID=$!

	while read -r FPS; do # Run life with a timeout and read FPS values
		FPS_TOTAL=$(echo "$FPS_TOTAL + $FPS" | bc)
		FPS_COUNT=$((FPS_COUNT + 1))
	done < <(timeout "$TIMEOUT" ./life 2>&1 | tee -a "$LOG_FILE" | grep "FPS:" | awk '{print $2}')

	kill "$XVFB_PID" 2>/dev/null # Kill Xvfb

	# Calculate and print the average FPS
	FPS_AVERAGE=$(echo "scale=2; $FPS_TOTAL / $FPS_COUNT" | bc)
	echo "$RES: $FPS_AVERAGE FPS (average)" | tee -a "$LOG_FILE"

	wait "$XVFB_PID" 2>/dev/null # Wait for Xvfb to be killed
done

echo "Benchmark completed. Results saved to $LOG_FILE."
